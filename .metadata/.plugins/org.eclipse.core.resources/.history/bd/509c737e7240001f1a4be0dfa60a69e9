package br.com.qwasolucoes.mentoria.implementacoes.logica_programacao;

import java.util.ArrayList;
import java.util.List;

public class Cenario {

	public static void main(String[] args) {

		/*
		 * LogicaProgramacaoProvider e = new LogicaProgramacaoProvider(); int valor = 2;
		 * 
		 * int[][] tabuada = e.tabuada(valor); for (int i = 0; i < tabuada.length; i++)
		 * {
		 * 
		 * System.out.println(tabuada[i][0] + ", " + tabuada[i][1] + ", " +
		 * tabuada[i][2]);
		 * 
		 * }
		 */
		/*
		 * LogicaProgramacaoProvider x = new LogicaProgramacaoProvider();
		 * 
		 * int resultado = 10; int[] obterDobrosAteMil = x.obterDobrosAteMil(resultado);
		 * for (int i = 0; i <= obterDobrosAteMil.length; i++) { }
		 */

		/*
		 * obterDobrosAteDez LogicaProgramacaoProvider e = new
		 * LogicaProgramacaoProvider();
		 * 
		 int valor = 15;
		List<Integer> obterDobrosAteDez = new ArrayList<>();
		int[] dobrosAteDez = x.obterDobrosAteDez(valor);
		 */

		/*
		 int valor = 5;
		List<Integer> obterDobrosAteDobroInformado = new ArrayList<>();
		int[] obterDobrosAteDobro = x.obterDobrosAteDobroInformado(valor);
		 * 
		 * int[] obterDobrosAteDobroInformado = e.obterDobrosAteDobroInformado(5);
		 * System.out.println(obterDobrosAteDobroInformado);
		 */

		/*
		 * LogicaProgramacaoProvider e = new LogicaProgramacaoProvider();
		 * 
		 * int[] obterDobrosAteDobroInformado = e.obterDobrosAteDobroInformado(5);
		 * System.out.println(obterDobrosAteDobroInformado);
		 */
		
	
		        Teste t1 = new Teste("a",1);
		        Teste t2 = new Teste("b",2);
		        Teste t3 = new Teste("c",3);
		        Teste t4 = new Teste("a",2);

		        List<Teste> lista = Arrays.asList(t1,t2,t3,t4);
		        String nomePesquisa = "a";
		        int idPesquisa = 2;

		        List<Teste> repetidosNome = Teste.pesquisarNome(lista,nomePesquisa);
		        List<Teste> repetidosId = Teste.pesquisarId(lista,idPesquisa);

		        repetidosNome.forEach(System.out::println);
		        System.out.println("--------------------------");
		        repetidosId.forEach(System.out::println);
		
		
		
	}

}
